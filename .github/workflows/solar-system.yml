name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
      MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
      MONGO_USERNAME: superuser
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

#        - name: Setup NodeJS Version
#          uses: actions/setup-node@v3
#          with:
#            node-version: 20
    
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
      name: Code coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18
    
        - name: Install Dependencies
          run: npm install
    
        - name: Run Code-coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    docker:
      name: Docker tasks
      runs-on: ubuntu-latest
      permissions: 
        packages: write
      needs: [unit-testing, code-coverage]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
    dev-deploy:
      name: dev-deploy
      runs-on: ubuntu-latest
      environment:
        name: development
      needs: docker
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0

        - name: Setup k8s context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}

        - name: Verify k8s
          run: kubectl version -o yaml


        - run: >
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
            ingress-nginx-controller -o
            jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: '${{ vars.NAMESPACE }}'
            REPLICAS: '${{ vars.REPLICAS }}'
            IMAGE: >-
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha
              }}
            INGRESS_IP: '${{ env.INGRESS_IP }}'
        - run: cat kubernetes/development/*.yaml

    integration-test:
      needs: dev-deploy
      uses: ./.github/workflows/reusable-workflow.yml
      with:
        ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}

        